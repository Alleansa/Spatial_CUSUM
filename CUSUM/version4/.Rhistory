N.grid=100
Status<-rep(0,(N.grid)^2)
grid.point = expand.grid(x=seq(1/N.grid,1,by=1/N.grid),y=seq(1/N.grid,1,by=1/N.grid))
#nondependence
grid.point$Observed<-rnorm((N.grid)^2)
grid.point$Status<-Status
grid.point[which(grid.point$x<=0.8&grid.point$x>=.3&grid.point$y<=.8&grid.point$y>=.3),4]<-1
grid.point[which(grid.point$x<=0.8&grid.point$x>=.35&grid.point$y<=.8&grid.point$y>=.35),4]<-0
ggplot(grid.point)+geom_point(aes(x=x,y=y,colour=Status))
library(ggplot2)
ggplot(grid.point)+geom_point(aes(x=x,y=y,colour=Status))
k=20
shift=0
Status<-rep(0,(N.grid)^2)
grid.point = expand.grid(x=seq(1/N.grid,1,by=1/N.grid),y=seq(1/N.grid,1,by=1/N.grid))
#nondependence
grid.point$Observed<-rnorm((N.grid)^2)
grid.point$Status<-Status
grid.point[which(grid.point$x<=0.8&grid.point$x>=.3&grid.point$y<=.8&grid.point$y>=.3),4]<-1
grid.point[which(grid.point$x<=0.8&grid.point$x>=.35&grid.point$y<=.8&grid.point$y>=.35),4]<-0
# grid.point[which(grid.point$x<=0.2&grid.point$x>=.1&grid.point$y<=.2&grid.point$y>=.1),4]<-1
# grid.point[which(grid.point$x<=0.9&grid.point$x>=.6&grid.point$y<=.9&grid.point$y>=.6),4]<-1
# grid.point[which(grid.point$x<=0.85&grid.point$x>=.65&grid.point$y<=.85&grid.point$y>=.65),4]<-0
grid.point[grid.point$Status==1,]$Observed<-grid.point[grid.point$Status==1,]$Observed+shift
range=c(k:50)
times=100
detection<-numeric(dim(grid.point)[1])
for (i in c(1:times)){
k<-sample(range,1)
grid.point <- within(grid.point, {
grp_x <- cut(x, (0:k)/k, labels = FALSE)
grp_y <- cut(y, (0:k)/k, labels = FALSE)
})
grid.point$group_label<-grid.point$grp_x+(grid.point$grp_y-1)*k
group_sample<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=function(x){sample(x,1)})
group_sum<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=sum)
group_count<-aggregate(rep(1,dim(grid.point)[1]),by=list(grid.point$group_label),FUN=sum)
group<-cbind(group_sample,(group_sum$x-group_sample$x)/group_count$x)
names(group)<-c("group","sample","prob")
rm(group_sample,group_sum,group_count)
location<-locate.change(group$sample[order(-group$prob)])[1]
signif_group<-order(-group$prob)[1:location]
detection[grid.point$group_label %in% signif_group]=1+detection[grid.point$group_label %in% signif_group]
}
source('~/Documents/Research/CODE/R/CUSUM/version4/main.R')
N.grid=100
sk=20
k=20
shift=0
Status<-rep(0,(N.grid)^2)
grid.point = expand.grid(x=seq(1/N.grid,1,by=1/N.grid),y=seq(1/N.grid,1,by=1/N.grid))
#nondependence
grid.point$Observed<-rnorm((N.grid)^2)
grid.point$Status<-Status
grid.point[which(grid.point$x<=0.8&grid.point$x>=.3&grid.point$y<=.8&grid.point$y>=.3),4]<-1
grid.point[which(grid.point$x<=0.8&grid.point$x>=.35&grid.point$y<=.8&grid.point$y>=.35),4]<-0
# grid.point[which(grid.point$x<=0.2&grid.point$x>=.1&grid.point$y<=.2&grid.point$y>=.1),4]<-1
# grid.point[which(grid.point$x<=0.9&grid.point$x>=.6&grid.point$y<=.9&grid.point$y>=.6),4]<-1
# grid.point[which(grid.point$x<=0.85&grid.point$x>=.65&grid.point$y<=.85&grid.point$y>=.65),4]<-0
grid.point[grid.point$Status==1,]$Observed<-grid.point[grid.point$Status==1,]$Observed+shift
detection<-numeric(dim(grid.point)[1])
for (i in c(1:times)){
k<-sample(range,1)
grid.point <- within(grid.point, {
grp_x <- cut(x, (0:k)/k, labels = FALSE)
grp_y <- cut(y, (0:k)/k, labels = FALSE)
})
grid.point$group_label<-grid.point$grp_x+(grid.point$grp_y-1)*k
group_sample<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=function(x){sample(x,1)})
group_sum<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=sum)
group_count<-aggregate(rep(1,dim(grid.point)[1]),by=list(grid.point$group_label),FUN=sum)
group<-cbind(group_sample,(group_sum$x-group_sample$x)/group_count$x)
names(group)<-c("group","sample","prob")
rm(group_sample,group_sum,group_count)
location<-locate.change(group$sample[order(-group$prob)])[1]
signif_group<-order(-group$prob)[1:location]
detection[grid.point$group_label %in% signif_group]=1+detection[grid.point$group_label %in% signif_group]
}
times=100
range=c(k,50)
detection<-numeric(dim(grid.point)[1])
for (i in c(1:times)){
k<-sample(range,1)
grid.point <- within(grid.point, {
grp_x <- cut(x, (0:k)/k, labels = FALSE)
grp_y <- cut(y, (0:k)/k, labels = FALSE)
})
grid.point$group_label<-grid.point$grp_x+(grid.point$grp_y-1)*k
group_sample<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=function(x){sample(x,1)})
group_sum<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=sum)
group_count<-aggregate(rep(1,dim(grid.point)[1]),by=list(grid.point$group_label),FUN=sum)
group<-cbind(group_sample,(group_sum$x-group_sample$x)/group_count$x)
names(group)<-c("group","sample","prob")
rm(group_sample,group_sum,group_count)
location<-locate.change(group$sample[order(-group$prob)])[1]
signif_group<-order(-group$prob)[1:location]
detection[grid.point$group_label %in% signif_group]=1+detection[grid.point$group_label %in% signif_group]
}
hist(detection)
detection_0<-detection
shift=1
Status<-rep(0,(N.grid)^2)
grid.point = expand.grid(x=seq(1/N.grid,1,by=1/N.grid),y=seq(1/N.grid,1,by=1/N.grid))
#nondependence
grid.point$Observed<-rnorm((N.grid)^2)
k=30
range=c(30:50)
detection<-numeric(dim(grid.point)[1])
for (i in c(1:times)){
k<-sample(range,1)
grid.point <- within(grid.point, {
grp_x <- cut(x, (0:k)/k, labels = FALSE)
grp_y <- cut(y, (0:k)/k, labels = FALSE)
})
grid.point$group_label<-grid.point$grp_x+(grid.point$grp_y-1)*k
group_sample<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=function(x){sample(x,1)})
group_sum<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=sum)
group_count<-aggregate(rep(1,dim(grid.point)[1]),by=list(grid.point$group_label),FUN=sum)
group<-cbind(group_sample,(group_sum$x-group_sample$x)/group_count$x)
names(group)<-c("group","sample","prob")
rm(group_sample,group_sum,group_count)
location<-locate.change(group$sample[order(-group$prob)])[1]
signif_group<-order(-group$prob)[1:location]
detection[grid.point$group_label %in% signif_group]=1+detection[grid.point$group_label %in% signif_group]
}
hist(detection)
d<-data.frame(s_0=detection)
shift=1
Status<-rep(0,(N.grid)^2)
grid.point = expand.grid(x=seq(1/N.grid,1,by=1/N.grid),y=seq(1/N.grid,1,by=1/N.grid))
#nondependence
grid.point$Observed<-rnorm((N.grid)^2)
grid.point$Status<-Status
grid.point[which(grid.point$x<=0.8&grid.point$x>=.3&grid.point$y<=.8&grid.point$y>=.3),4]<-1
grid.point[which(grid.point$x<=0.8&grid.point$x>=.35&grid.point$y<=.8&grid.point$y>=.35),4]<-0
# grid.point[which(grid.point$x<=0.2&grid.point$x>=.1&grid.point$y<=.2&grid.point$y>=.1),4]<-1
# grid.point[which(grid.point$x<=0.9&grid.point$x>=.6&grid.point$y<=.9&grid.point$y>=.6),4]<-1
# grid.point[which(grid.point$x<=0.85&grid.point$x>=.65&grid.point$y<=.85&grid.point$y>=.65),4]<-0
grid.point[grid.point$Status==1,]$Observed<-grid.point[grid.point$Status==1,]$Observed+shift
detection<-numeric(dim(grid.point)[1])
for (i in c(1:times)){
k<-sample(range,1)
grid.point <- within(grid.point, {
grp_x <- cut(x, (0:k)/k, labels = FALSE)
grp_y <- cut(y, (0:k)/k, labels = FALSE)
})
grid.point$group_label<-grid.point$grp_x+(grid.point$grp_y-1)*k
group_sample<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=function(x){sample(x,1)})
group_sum<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=sum)
group_count<-aggregate(rep(1,dim(grid.point)[1]),by=list(grid.point$group_label),FUN=sum)
group<-cbind(group_sample,(group_sum$x-group_sample$x)/group_count$x)
names(group)<-c("group","sample","prob")
rm(group_sample,group_sum,group_count)
location<-locate.change(group$sample[order(-group$prob)])[1]
signif_group<-order(-group$prob)[1:location]
detection[grid.point$group_label %in% signif_group]=1+detection[grid.point$group_label %in% signif_group]
}
hist(detection)
d$s_1<-detection
View(d)
shift=2
Status<-rep(0,(N.grid)^2)
grid.point = expand.grid(x=seq(1/N.grid,1,by=1/N.grid),y=seq(1/N.grid,1,by=1/N.grid))
#nondependence
grid.point$Observed<-rnorm((N.grid)^2)
grid.point$Status<-Status
grid.point[which(grid.point$x<=0.8&grid.point$x>=.3&grid.point$y<=.8&grid.point$y>=.3),4]<-1
grid.point[which(grid.point$x<=0.8&grid.point$x>=.35&grid.point$y<=.8&grid.point$y>=.35),4]<-0
# grid.point[which(grid.point$x<=0.2&grid.point$x>=.1&grid.point$y<=.2&grid.point$y>=.1),4]<-1
# grid.point[which(grid.point$x<=0.9&grid.point$x>=.6&grid.point$y<=.9&grid.point$y>=.6),4]<-1
# grid.point[which(grid.point$x<=0.85&grid.point$x>=.65&grid.point$y<=.85&grid.point$y>=.65),4]<-0
grid.point[grid.point$Status==1,]$Observed<-grid.point[grid.point$Status==1,]$Observed+shift
detection<-numeric(dim(grid.point)[1])
for (i in c(1:times)){
k<-sample(range,1)
grid.point <- within(grid.point, {
grp_x <- cut(x, (0:k)/k, labels = FALSE)
grp_y <- cut(y, (0:k)/k, labels = FALSE)
})
grid.point$group_label<-grid.point$grp_x+(grid.point$grp_y-1)*k
group_sample<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=function(x){sample(x,1)})
group_sum<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=sum)
group_count<-aggregate(rep(1,dim(grid.point)[1]),by=list(grid.point$group_label),FUN=sum)
group<-cbind(group_sample,(group_sum$x-group_sample$x)/group_count$x)
names(group)<-c("group","sample","prob")
rm(group_sample,group_sum,group_count)
location<-locate.change(group$sample[order(-group$prob)])[1]
signif_group<-order(-group$prob)[1:location]
detection[grid.point$group_label %in% signif_group]=1+detection[grid.point$group_label %in% signif_group]
}
hist(detection)
sum(grid.point$Status)
d$s_2<-detection
shift=5
Status<-rep(0,(N.grid)^2)
grid.point = expand.grid(x=seq(1/N.grid,1,by=1/N.grid),y=seq(1/N.grid,1,by=1/N.grid))
#nondependence
grid.point$Observed<-rnorm((N.grid)^2)
grid.point$Status<-Status
grid.point[which(grid.point$x<=0.8&grid.point$x>=.3&grid.point$y<=.8&grid.point$y>=.3),4]<-1
grid.point[which(grid.point$x<=0.8&grid.point$x>=.35&grid.point$y<=.8&grid.point$y>=.35),4]<-0
# grid.point[which(grid.point$x<=0.2&grid.point$x>=.1&grid.point$y<=.2&grid.point$y>=.1),4]<-1
# grid.point[which(grid.point$x<=0.9&grid.point$x>=.6&grid.point$y<=.9&grid.point$y>=.6),4]<-1
# grid.point[which(grid.point$x<=0.85&grid.point$x>=.65&grid.point$y<=.85&grid.point$y>=.65),4]<-0
grid.point[grid.point$Status==1,]$Observed<-grid.point[grid.point$Status==1,]$Observed+shift
detection<-numeric(dim(grid.point)[1])
for (i in c(1:times)){
k<-sample(range,1)
grid.point <- within(grid.point, {
grp_x <- cut(x, (0:k)/k, labels = FALSE)
grp_y <- cut(y, (0:k)/k, labels = FALSE)
})
grid.point$group_label<-grid.point$grp_x+(grid.point$grp_y-1)*k
group_sample<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=function(x){sample(x,1)})
group_sum<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=sum)
group_count<-aggregate(rep(1,dim(grid.point)[1]),by=list(grid.point$group_label),FUN=sum)
group<-cbind(group_sample,(group_sum$x-group_sample$x)/group_count$x)
names(group)<-c("group","sample","prob")
rm(group_sample,group_sum,group_count)
location<-locate.change(group$sample[order(-group$prob)])[1]
signif_group<-order(-group$prob)[1:location]
detection[grid.point$group_label %in% signif_group]=1+detection[grid.point$group_label %in% signif_group]
}
hist(detection)
d$s_5<-detection
View(d)
d$x<-grid.point$x
dyy<-grid.point$y
ggplot(d)+geom_point(aes(x=x,y=y,colour=s_0))
d$y<-grid.point$y
ggplot(d)+geom_point(aes(x=x,y=y,colour=s_0))
ggplot(d)+geom_point(aes(x=x,y=y,colour=s_1))
ggplot(d)+geom_point(aes(x=x,y=y,colour=s_2))
ggplot(d)+geom_point(aes(x=x,y=y,colour=s_5))
library(grid)
a<-ggplot(d)+geom_point(aes(x=x,y=y,colour=s_0))
b<-ggplot(d)+geom_point(aes(x=x,y=y,colour=s_1))
b<-ggplot(d)+geom_point(aes(x=x,y=y,colour=s_1))++theme(legend.position='none')
b<-ggplot(d)+geom_point(aes(x=x,y=y,colour=s_1))+theme(legend.position='none')
a<-ggplot(d)+geom_point(aes(x=x,y=y,colour=s_0))+theme(legend.position='none')
c<-ggplot(d)+geom_point(aes(x=x,y=y,colour=s_2))+theme(legend.position='none')
d<-ggplot(d)+geom_point(aes(x=x,y=y,colour=s_5))+theme(legend.position='none')
grid.newpage()  ##newpage
pushViewport(viewport(layout = grid.layout(2,2))) ### divide into 1*3
vplayout <- function(x,y){
viewport(layout.pos.row = x, layout.pos.col = y)
}
print(a, vp = vplayout(1,1))   ### put a in (1,1)
print(b, vp = vplayout(1,2))   ### put b in (1,2)
print(c, vp = vplayout(2,1))  ###put c in (1,3)
print(d, vp = vplayout(2,2))  ###put c in (1,3)
x
d
load("/Users/Allen/Documents/Research/DATA/Brain_FMRI/Data.RData")
library(ggplot2)
library(grid)
yyy <- sqrt(121) * atanh(xxx)
one_sample<-(yyy[,,13,6])
N.grid<-128
grid.point <- expand.grid(x=seq(1/N.grid,1,by=1/N.grid),y=seq(1/N.grid,1,by=1/N.grid))
grid.point$Observed<-as.vector(one_sample)
a<-ggplot()+geom_point(data=grid.point, aes(x = x, y = y,colour=Observed))+scale_color_gradientn(colours = rev(rainbow(6)))+theme(legend.position='none')
CUSUM<-function(e){
e_star<-c(0,e)
T<-cumsum(e_star)-mean(e)*c(0:length(e))
return(T^2/length(e))
}
#locate changepoint
locate.change<-function (x)
{
x <- as.matrix(x)
if (dim(x)[2] == 1)
x <- t(x)
n <- dim(x)[2]
x<-x/mad(x)
T <-CUSUM(x)
changepoint <- which.max(T)
cusum <- mean(T)
return(c(changepoint,cusum))
}
#signal detection
signal_detection<-function(grid.point,range=c(30:50),times=100,alpha=0.05){
detection<-numeric(dim(grid.point)[1])
for (i in c(1:times)){
k<-sample(range,1)
grid.point <- within(grid.point, {
grp_x <- cut(x, (0:k)/k, labels = FALSE)
grp_y <- cut(y, (0:k)/k, labels = FALSE)
})
grid.point$group_label<-grid.point$grp_x+(grid.point$grp_y-1)*k
group_sample<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=function(x){sample(x,1)})
group_sum<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=sum)
group_count<-aggregate(rep(1,dim(grid.point)[1]),by=list(grid.point$group_label),FUN=sum)
group<-cbind(group_sample,(group_sum$x-group_sample$x)/group_count$x)
names(group)<-c("group","sample","prob")
rm(group_sample,group_sum,group_count)
location<-locate.change(group$sample[order(-group$prob)])[1]
signif_group<-order(-group$prob)[1:location]
detection[grid.point$group_label %in% signif_group]=1+detection[grid.point$group_label %in% signif_group]
}
q<-quantile(detection,1-alpha)
p<-quantile(detection,0.5)
res<-numeric(dim(grid.point)[1])
res[detection>=q]<-1
res[detection<=p]<--1
res[detection>p&detection<q]<-0
return(res)
}
#boundary correction
boundary_correction<-function(grid.point,detection,alpha=0.05){
new_alpha<-alpha*(1+sum(detection==-1)/sum(detection==0))
mu_normal<-median(grid.point$Observed[detection!=1])
var_normal<-mad(grid.point$Observed[detection!=1])
pvalue<-1-pnorm((grid.point$Observed[detection!=1]-mu_normal)/sqrt(var_normal))
fdr_pvalue<-p.adjust(pvalue,"fdr")
detection[which(detection!=1)[fdr_pvalue<new_alpha]]=1
detection[detection==-1]=0
return(detection)
}
times=100
range<-c(40,64)
detection<-numeric(dim(grid.point)[1])
for (i in c(1:times)){
k<-sample(range,1)
grid.point <- within(grid.point, {
grp_x <- cut(x, (0:k)/k, labels = FALSE)
grp_y <- cut(y, (0:k)/k, labels = FALSE)
})
grid.point$group_label<-grid.point$grp_x+(grid.point$grp_y-1)*k
group_sample<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=function(x){sample(x,1)})
group_sum<-aggregate(grid.point$Observed,by=list(grid.point$group_label),FUN=sum)
group_count<-aggregate(rep(1,dim(grid.point)[1]),by=list(grid.point$group_label),FUN=sum)
group<-cbind(group_sample,(group_sum$x-group_sample$x)/group_count$x)
names(group)<-c("group","sample","prob")
rm(group_sample,group_sum,group_count)
tem<-group$sample[order(-group$prob)]
location<-locate.change(tem[1:1000])[1]
signif_group<-order(-group$prob)[1:location]
detection[grid.point$group_label %in% signif_group]=1+detection[grid.point$group_label %in% signif_group]
}
b<-ggplot(grid.point)+geom_point(aes(x=x,y=y,colour=detection))+theme(legend.position='none')
c<-ggplot(grid.point)+geom_point(aes(x=x,y=y,colour=detection==100))+theme(legend.position='none')
d<-ggplot(grid.point)+geom_point(aes(x=x,y=y,colour=detection==0))+theme(legend.position='none')
plot(tem)
grid.newpage()  ##newpage
pushViewport(viewport(layout = grid.layout(2,2))) ### divide into 1*3
vplayout <- function(x,y){
viewport(layout.pos.row = x, layout.pos.col = y)
}
print(a, vp = vplayout(1,1))   ### put a in (1,1)
print(b, vp = vplayout(1,2))   ### put b in (1,2)
print(c, vp = vplayout(2,1))  ###put c in (1,3)
print(d, vp = vplayout(2,2))  ###put c in (1,3)
hist(detection)
sum(detection==100)/128^2
